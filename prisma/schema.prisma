// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String?  @unique
  password  String
  avatar    String?
  isOnline  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sentMessages     Message[] @relation("UserSentMessages")
  groupMemberships GroupMember[]
  
  @@map("users")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  isAnonymous Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  messages Message[]
  members  GroupMember[]
  
  @@map("groups")
}

model GroupMember {
  id       String @id @default(cuid())
  userId   String
  groupId  String
  joinedAt DateTime @default(now())
  
  // Relations
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  
  @@unique([userId, groupId])
  @@map("group_members")
}

model Message {
  id        String      @id @default(cuid())
  content   String
  type      MessageType @default(TEXT)
  senderId  String
  groupId   String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  isAnonymous Boolean   @default(false)

  // Relations
  sender User  @relation("UserSentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  group  Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  
  @@map("messages")
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
}